<UserControl x:Class="BSUIRScheduleDESK.Controls.SearchBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BSUIRScheduleDESK.Controls"
             mc:Ignorable="d"
             x:Name="root"
             PreviewKeyDown="Control_KeyDown">
    <UserControl.Resources>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Border Background="{DynamicResource TextBox.Static.Background}" Width="280">
                            <Label Content="Введите номер группы" Foreground="{DynamicResource SearchBox.TextBox.Static.Hint.Foreground}" FontWeight="Normal" />
                        </Border>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource TextBox.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="listViewTemplate" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource ListView.Item.Static.Background}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Height="25" Margin="2,1,2,1">
                            <ContentPresenter Margin="2,0" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ListView.Item.Selected.Background}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ListView.Item.Selected.BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusTextBox" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=searchTextBox, Path=IsVisible}" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=searchTextBox}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid SnapsToDevicePixels="True" Style="{DynamicResource FocusTextBox}">
        <Popup x:Name="popup" 
               Placement="Bottom" 
               AllowsTransparency="True" 
               StaysOpen="False" 
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
               IsOpen="{Binding IsDropDownOpen, ElementName=root}">
            <Border x:Name="dropDownBorder" 
                    Background="Transparent" 
                    Width="{Binding ActualWidth, ElementName=searchTextBox}" 
                    MaxHeight="{Binding MaxDropDownHeigth, ElementName=root}">
                <ListView x:Name="ListView" 
                          BorderBrush="{DynamicResource ListView.BorderBrush.Static}" 
                          BorderThickness="1" 
                          ItemsSource="{Binding ItemsSource, ElementName=root}" 
                          KeyboardNavigation.DirectionalNavigation="Cycle" 
                          SelectedIndex="{Binding SelectedIndex, ElementName=root}" 
                          SelectedItem="{Binding SelectedItem, ElementName=root}" 
                          KeyDown="ListView_KeyDown"
                          ItemContainerStyle="{DynamicResource listViewTemplate}"  
                          Background="{DynamicResource ListView.Background.Static}"
                          Foreground="{DynamicResource ListView.Foreground.Static}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                </ListView>
            </Border>
        </Popup>
        <TextBox x:Name="searchTextBox" 
                 Text="{Binding SText, ElementName=root, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 TabIndex="0" 
                 Style="{DynamicResource TextBoxStyle}"/>
    </Grid>
</UserControl>