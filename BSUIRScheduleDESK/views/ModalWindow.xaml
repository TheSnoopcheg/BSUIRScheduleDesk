<Window x:Class="BSUIRScheduleDESK.views.ModalWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BSUIRScheduleDESK.views"
        mc:Ignorable="d"
        Title="ModalWindow"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterScreen"
        x:Name="root">
    <Window.Resources>
        <DropShadowEffect x:Key="windowShadow" BlurRadius="5" Opacity="0.7" ShadowDepth="0"/>
    </Window.Resources>
    <Grid Width="300">
        <Border Background="Black"
                Margin="4"
                CornerRadius="5"
                Effect="{DynamicResource windowShadow}"/>
        <Border Background="{DynamicResource ModalWinodw.Background.Static}"
                CornerRadius="5" 
                Margin="3"
                KeyDown="Border_KeyDown"
                MouseDown="Border_MouseDown">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition MaxHeight="50" Height="auto"/>
                    <RowDefinition MinHeight="0" MaxHeight="250" Height="auto"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding ElementName=root, Path=WTitle}"
                           Foreground="{DynamicResource ModalWinodw.Text.Foreground.Static}"
                           Margin="5,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           FontSize="16"
                           FontWeight="DemiBold"
                           Grid.Row="0"/>
                <Button Style="{DynamicResource ButtonStyle}"
                        Width="25"
                        Height="25"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        IsCancel="True"
                        Grid.Row="0">
                    <Path Data="{DynamicResource closeIcon}"
                          Stretch="Fill"
                          Width="12.5"
                          Height="12.5"
                          Fill="{DynamicResource ModalWinodw.Text.Foreground.Static}"/>
                </Button>

                <Image Source="{Binding ElementName=root, Path=ImageUrl}"
                       Stretch="UniformToFill"
                       HorizontalAlignment="Center"
                       Margin="5,0,5,0"
                       Grid.Row="1"/>

                <TextBlock Text="{Binding ElementName=root, Path=WContent}"
                           Foreground="{DynamicResource ModalWinodw.Text.Foreground.Static}"
                           Margin="5"
                           HorizontalAlignment="Left"
                           TextWrapping="Wrap"
                           FontSize="14"
                           Grid.Row="2"/>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Grid.Row="3">
                    <Button Width="75"
                            Padding="0"
                            Margin="0,0,5,0"
                            Height="25"
                            FontWeight="DemiBold"
                            FontSize="14"
                            VerticalAlignment="Center"
                            IsDefault="True"
                            x:Name="firstButton"
                            Click="firstButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource ModalWindow.Button.Static.Foreground}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource ModalWindow.Button.Static.Background}"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Content" Value="Принять"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.MouseOver.Background}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.Pressed.Background}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="YesNo">
                                                    <Setter Property="Content" Value="Да"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="YesNoCancel">
                                                    <Setter Property="Content" Value="Да"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Width="75"
                            Padding="0"
                            Margin="0,0,5,0"
                            Height="25"
                            FontWeight="DemiBold"
                            FontSize="14"
                            VerticalAlignment="Center"
                            IsCancel="True"
                            x:Name="secondButton"
                            Click="secondButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource ModalWindow.Button.Static.Foreground}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource ModalWindow.Button.Static.Background}"/>
                                <Setter Property="Content" Value="Нет"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.MouseOver.Background}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.Pressed.Background}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="YesNo">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="YesNoCancel">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Width="75"
                            Padding="0"
                            Margin="0,0,5,0"
                            Height="25"
                            FontWeight="DemiBold"
                            FontSize="14"
                            VerticalAlignment="Center"
                            IsCancel="True"
                            x:Name="thirdButton"
                            Click="secondButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource ModalWindow.Button.Static.Foreground}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource ModalWindow.Button.Static.Background}"/>
                                <Setter Property="Content" Value="Отмена"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.MouseOver.Background}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ModalWindow.Button.Pressed.Background}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="YesNoCancel">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=root, Path=Buttons}" Value="OKCancel">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                
            </Grid>
        </Border>
    </Grid>
</Window>
