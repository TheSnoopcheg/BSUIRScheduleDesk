<Window x:Class="BSUIRScheduleDESK.views.NotesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BSUIRScheduleDESK.views"
        xmlns:converters="clr-namespace:BSUIRScheduleDESK.templates"
        mc:Ignorable="d"
        Title="NotesWindow" Height="450" Width="800"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        MouseDown="Window_MouseDown"
        KeyDown="Window_KeyDown"
        x:Name="noteWindow">
    <Window.Resources>
        <converters:ButtonEnableConverter x:Key="ButtonEnableConverter"/>
        <DataTemplate x:Key="noteTemplate">
            <Grid Margin="0,5,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="175"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Path=Date, StringFormat=dd.MM.yyyy}"
                           Foreground="{DynamicResource Border.ElementText.Static}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextWrapping="Wrap"
                           TextAlignment="Center"
                           Width="60"/>
                <TextBlock Grid.Column="1" Text="{Binding Path=Content}"
                           Foreground="{DynamicResource Border.ElementText.Static}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextWrapping="Wrap"
                           TextAlignment="Center"/>
            </Grid>
        </DataTemplate>
        
        <Style x:Key="listViewTemplate" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Height="Auto" Margin="0">
                            <ContentPresenter Margin="0" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ListView.Item.Selected.Background}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ListView.Item.MouseOver.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ListBox.BorderBrush.Static}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" SnapsToDevicePixels="true" CornerRadius="0,0,10,10">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Disabled">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1,0,0,1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="{DynamicResource DatePicker.Foreground.Static}"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="CalendarStyle" Value="{DynamicResource CalendarStyle}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DatePicker.BorderBrush.Static}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" Storyboard.TargetName="btnBackground" To="{StaticResource DatePicker.Button.Background.MouseOver}" Storyboard.TargetProperty="Background.Color"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" Storyboard.TargetName="btnBackground" To="{StaticResource DatePicker.Button.Background.Pressed}" Storyboard.TargetProperty="Background.Color"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border x:Name="btnBackground" Background="Transparent" CornerRadius="2">
                                                <Path Fill="{DynamicResource Icon.Stroke.Static}"
                                                      Stretch="Fill"
                                                      Height="16.5"
                                                      Width="16.5"
                                                      Data="{StaticResource calendarIcon}"/>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Center" Width="20"/>
                                <DatePickerTextBox x:Name="PART_TextBox" FontSize="11" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Center" Style="{StaticResource TextBoxStyle}"/>
                                <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Fill="#A5FFFFFF" Grid.Row="0" RadiusX="1" RadiusY="1"/>
                                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" Grid.Row="0" RadiusX="1" RadiusY="1" Width="19"/>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border CornerRadius="10"
            BorderThickness="1"
            BorderBrush="{DynamicResource Window.BorderBrush.Static}"
            Background="{DynamicResource Window.Background.Static}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock VerticalAlignment="Center"
                       Foreground="{DynamicResource SubWindow.TitleText.Static}"
                       Margin="10"
                       FontSize="16"
                       FontWeight="DemiBold">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Text" Value="Заметки"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEmployeeNote}" Value="True">
                                <Setter Property="Text" Value="{Binding Title, StringFormat=Заметки {0}}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEmployeeNote}" Value="False">
                                <Setter Property="Text" Value="{Binding Path=Title, StringFormat=Заметки группы {0}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button x:Name="btnClose"
                    Style="{StaticResource ButtonStyle1}"
                    Height="30"
                    Width="30"
                    Click="btnClose_Click"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="10">
                <Path Fill="{DynamicResource Icon.Stroke.Static}"
                      Stretch="Fill"
                      Height="15"
                      Width="15"
                      Data="{StaticResource closeIcon}"/>
                <Button.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="15" CenterY="15"/>
                </Button.RenderTransform>
            </Button>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        CornerRadius="10"
                        Margin="10,10,5,10"
                        Background="{DynamicResource Border.Background.Static}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" 
                                HorizontalAlignment="Stretch" 
                                Background="{DynamicResource Border.Title.Background.Static}" 
                                CornerRadius="10,10,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="175"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" 
                                           Foreground="{DynamicResource Border.TitleText.Static}"
                                           Text="Дата"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontWeight="DemiBold"/>
                                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                           Grid.Column="0"
                                           HorizontalAlignment="Right"
                                           Background="{DynamicResource Border.Title.Separator.Static}"/>
                                <TextBlock Grid.Column="1"
                                           Foreground="{DynamicResource Border.TitleText.Static}"
                                           Text="Заметка"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontWeight="DemiBold"/>
                            </Grid>
                        </Border>
                        <ListView Style="{DynamicResource ListViewStyle}" Grid.Row="1"
                                  Padding="0"
                                  ItemsSource="{Binding Notes}"
                                  x:Name="lstView"
                                  ItemTemplate="{DynamicResource noteTemplate}"
                                  ItemContainerStyle="{DynamicResource listViewTemplate}"
                                  SelectedItem="{Binding Path=SelectedNote}"/>
                        <StackPanel Orientation="Vertical" Grid.Row="1" VerticalAlignment="Center">
                            <Path Fill="{DynamicResource Icon.Stroke.Static}"
                                  Stretch="Fill"
                                  Height="125"
                                  Width="125"
                                  Data="{StaticResource documentsIcon}"/>
                            <TextBlock Text="Заметок нет"
                                       Foreground="{DynamicResource Border.Empty.Static}"
                                       HorizontalAlignment="Center"
                                       FontWeight="DemiBold"
                                       Margin="0,5,0,0"/>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Notes.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>
                </Border>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="120"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Margin="5,10,10,10">
                        <Button Style="{DynamicResource ButtonStyle1}"
                                Height="30"
                                Width="135"
                                Content="Добавить"
                                Foreground="{DynamicResource SubWindow.Button.Foreground.Static}"
                                Background="{DynamicResource SubWindow.Button.Background.Static}"
                                Command="{Binding Path=AddNote}">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="67.5" CenterY="15"/>
                            </Button.RenderTransform>
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource ButtonEnableConverter}">
                                    <Binding ElementName="noteDatePicker" Path="SelectedDate"/>
                                    <Binding ElementName="noteText" Path="Text"/>
                                    <Binding Path="IsEditing"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button Style="{DynamicResource ButtonStyle1}"
                                Height="30"
                                Width="135"
                                Margin="0,5,0,0"
                                Content="Редактировать"
                                Foreground="{DynamicResource SubWindow.Button.Foreground.Static}"
                                Background="{DynamicResource SubWindow.Button.Background.Static}"
                                IsEnabled="{Binding ElementName=lstView, Path=SelectedIndex, Converter={StaticResource ButtonEnableConverter}}"
                                Command="{Binding Path=EditNote}">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="67.5" CenterY="15"/>
                            </Button.RenderTransform>
                        </Button>
                        <Button Style="{DynamicResource ButtonStyle1}"
                                Height="30"
                                Width="135"
                                Margin="0,5,0,0"
                                Content="Удалить"
                                Foreground="{DynamicResource SubWindow.Button.Foreground.Static}"
                                Background="{DynamicResource SubWindow.Button.Background.Static}"
                                IsEnabled="{Binding ElementName=lstView, Path=SelectedIndex, Converter={StaticResource ButtonEnableConverter}}"
                                Command="{Binding Path=DeleteNote}"
                                CommandParameter="{Binding ElementName=lstView, Path=SelectedItem}">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="67.5" CenterY="15"/>
                            </Button.RenderTransform>
                        </Button>
                    </StackPanel>
                    <Grid Grid.Row="1" Margin="5,0,10,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" 
                                   Text="Дата:" 
                                   Foreground="{DynamicResource TextBlock.Foreground.Static}"/>
                        <DatePicker x:Name="noteDatePicker" 
                                    Grid.Row="1" 
                                    Style="{DynamicResource DatePickerStyle}" 
                                    SelectedDate="{Binding Path=NoteDate}"/>
                        <TextBlock Grid.Row="2" 
                                   Text="Текст:" 
                                   Foreground="{DynamicResource TextBlock.Foreground.Static}"/>
                        <TextBox Style="{DynamicResource TextBoxStyle}" 
                                 x:Name="noteText" 
                                 Grid.Row="3" 
                                 Text="{Binding Path=NoteText, UpdateSourceTrigger=PropertyChanged}" 
                                 TextWrapping="Wrap"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
